{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_source",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_destination",
						"type": "DatasetReference"
					},
					"name": "destination1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DR_NO as integer,",
				"          {Date Rptd} as date 'yyyy-MM-dd',",
				"          {DATE OCC} as string,",
				"          {TIME OCC} as short,",
				"          AREA as short,",
				"          {AREA NAME} as string,",
				"          {Rpt Dist No} as short,",
				"          {Crm Cd} as short,",
				"          {Crm Cd Desc} as string,",
				"          {Vict Age} as short,",
				"          {Vict Sex} as string,",
				"          {Vict Descent} as string,",
				"          {Premis Cd} as short,",
				"          {Premis Desc} as string,",
				"          {Weapon Used Cd} as string,",
				"          {Weapon Desc} as string,",
				"          {Status Desc} as string,",
				"          {Crm Cd 1} as short,",
				"          {Crm Cd 2} as string,",
				"          {Crm Cd 3} as string,",
				"          {Crm Cd 4} as string,",
				"          LOCATION as string,",
				"          {Cross Street} as string,",
				"          LAT as double,",
				"          LON as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 filter({Crm Cd Desc} == \"VEHICLE - STOLEN\"\r",
				") ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> destination1"
			]
		}
	}
}